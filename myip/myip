#!/bin/bash

# =========================================================================
#
# Getting both internal and external IP addresses used for outgoing 
# Internet connections.
#
# Internal IP address is the IP address of your computer network interface 
# that would be used to connect to Internet.
#
# External IP address is the IP address that is visible by external 
# servers that you connect to over Internet.
#
# Copyright (C) 2016 Ildar Shaimordanov
#
# =========================================================================

# Details of the actual implementation are based on the following QA:
#
# How can I get my external IP address in a shell script?
# http://unix.stackexchange.com/q/22615
#
# How do I find my internal ip address?
# https://askubuntu.com/a/604691

# =========================================================================

for f in \
	"$( dirname "$0" )/myip.conf" \
	~/.myip.conf \
	/etc/myip.conf
do
	[ -f "$f" ] && {
		. "$f"
		break
	}
done

# =========================================================================

show_usage() {
	cat - <<HELP
USAGE
  $( basename "$0" ) [OPTIONS]

DESCRIPTION
  Display the internal and external IP addresses

OPTIONS
  -i  Display the internal IP address
  -e  Display the external IP address
  -v  Turn on verbosity
  -h  Print this help and exit
HELP
	exit
}

die() {
	echo "$( basename "$0" ): $@" >&2
	exit 2
}

# =========================================================================

show_internal=""
show_external=""
show_verbose=""

while getopts ":ievh" opt
do
	case "$opt" in
	i )
		show_internal=1
		;;
	e )
		show_external=1
		;;
	v )
		show_verbose=1
		;;
	h )
		show_usage
		;;
	\? )
		die "Illegal option: $OPTARG"
		;;
	esac
done

if [ -z "$show_internal" -a -z "$show_external" ]
then
	show_internal=1
	show_external=1
fi

# =========================================================================

# Use Google's public DNS to resolve the internal IP address
[ -n "$TARGETADDR" ] || TARGETADDR="8.8.8.8"

# Query the specific URL to resolve the external IP address
[ -n "$IPURL" ] || IPURL="ipecho.net/plain"

# Define explicitly $IPCMD to gather $IPURL using another tool
[ -n "$IPCMD" ] || {
	if   which curl >/dev/null 2>&1
	then
		IPCMD="curl -s"
	elif which wget >/dev/null 2>&1
	then
		IPCMD="wget -qO -"
	else
		die "Neither curl nor wget installed"
	fi
}

# =========================================================================

resolveip() {
	{
		gethostip -d "$1" && return
		getent ahostsv4 "$1" \
		| grep RAW \
		| awk '{ print $1; exit }' 
	} 2>/dev/null
}

internalip() {
	[ -n "$show_verbose" ] && printf "Internal: "

	case "$( uname | tr '[:upper:]' '[:lower:]' )" in
	cygwin* | mingw* | msys* )
		netstat -rn \
		| grep -w '0.0.0.0' \
		| awk '{ print $4 }'
		return
		;;
	esac

	local t="$( resolveip "$TARGETADDR" )"
	[ -n "$t" ] || die "Cannot resolve $TARGETADDR"
	ip route get "$t" \
	| awk '{ print $NF; exit }'
}

externalip() {
	[ -n "$show_verbose" ] && printf "External: "

	eval $IPCMD "$IPURL" $IPOPEN
}

# =========================================================================

[ -n "$show_internal" ] && internalip
[ -n "$show_external" ] && externalip

# =========================================================================

# EOF
